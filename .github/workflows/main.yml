on:
  push:
    branches: [ master ]

name: Deploy to Amazon ECS

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
          ECR_CLUSTER: ${{ secrets.ECS_CLUSTER_NAME }}
          ECS_SERVICE: ${{ secrets.ECS_SERVICE_NAME }}
          IMAGE_TAG: release
        run: |
          # Builder a docker container and push it to ECR
          mvn clean install
          echo "Building Docker Image to $ECR_REGISTRY..."
          docker build -t $ECR_REGISTRY/ato-calc-repo:latest .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/ato-calc-repo:latest
          echo "::set-output name=image::$ECR_REGISTRY/ato-calc-repo:$IMAGE_TAG"
          echo "Updating task in service into deployed repository..."
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
          echo "Task in service has successfuly updated."